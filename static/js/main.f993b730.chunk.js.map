{"version":3,"sources":["components/Card.js","components/Stats.js","components/CardContainer.js","App.js","index.js"],"names":["Card","card","this","props","react_default","a","createElement","className","onClick","style","background","concat","image","front","backgroundSize","alt","player","firstName","back","lastName","Component","Stats","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","category","keys","positionPlayers","stats","options","toConsumableArray","key","value","_this2","display","onChange","e","setState","target","renderOptions","_this3","_this$props","es6","width","height","data","sort","b","formatter","c","labelFormatter","i","fullName","cursor","fill","labelStyle","name","type","dataKey","barSize","animationBegin","map","entry","index","info","year","number","color","stroke","createSelectBox","CardContainer","showStats","components_Stats","components_Card","renderStats","App","cards","cardsJSON","_this$state","age","sortedCards","sortCards","filter","postionCard","position","components_CardContainer","renderCards","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f993b730.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Card extends Component {\n    render() {\n        const { card } = this.props;\n        return (\n            <div className=\"card\" onClick={this.props.onClick}>\n                <div className=\"card-inner\">\n                    <div \n                        style={{background: `url(${card.image.front}) no-repeat`, backgroundSize: \"cover\"}} \n                        alt={card.player.firstName} \n                        className=\"card-front\" \n                    />\n                    <div \n                        style={{background: `url(${card.image.back}) no-repeat`, backgroundSize: \"cover\"}} \n                        alt={card.player.lastName} \n                        className=\"card-back\" \n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport { BarChart, Bar, Tooltip, Cell } from \"recharts\";\n\nclass Stats extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            category: Object.keys(props.positionPlayers[0].player.stats)[0]\n        }\n    }\n    renderOptions(stats) {\n        let options = [];\n\n        for (let category in stats) {\n            options = [...options, <option key={category} value={category}>{category}</option>]\n        }\n        return options;\n    }\n    createSelectBox(stats) {\n        return (\n            <div>\n                <div className=\"statselectdiv\">\n                    <label style={{ display: \"flex\" }}>\n                        <select onChange={e => this.setState({ category: e.target.value })}>\n                            {this.renderOptions(stats)}\n                        </select>\n                    </label>\n                </div>\n            </div>\n        )\n    }\n    render() {\n        const { positionPlayers, card } = this.props;\n        return (\n            <div className=\"stats\">\n                <BarChart \n                    width={250}\n                    height={325}\n                    data={positionPlayers.sort((a, b) => b.player.stats[this.state.category] - a.player.stats[this.state.category])} \n                    onClick={this.props.onClick}\n                >\n                    <Tooltip \n                        formatter={(a, b, c) => a} \n                        labelFormatter={(i) => positionPlayers[i].player.fullName} \n                        cursor={{ fill: \"transparent\" }}\n                        labelStyle={{ fill: \"red\" }}\n                    />\n                    <Bar \n                        name={this.state.category} \n                        type=\"monotone\" \n                        dataKey={`player.stats.${this.state.category}`} \n                        barSize={30} \n                        fill=\"#DDD\" \n                        animationBegin={500}\n                    >\n                        {positionPlayers.map((entry, index) => (\n                            <Cell \n                                key={`${entry.info.year}${entry.info.number}`}\n                                fill={`${entry.info.year}${entry.info.number}` === `${card.info.year}${card.info.number}` ? card.style.color : '#FFF'} \n                                stroke=\"#FFF\"\n                            />\n                        ))}\n                    </Bar>\n                </BarChart>\n                { this.createSelectBox(positionPlayers[0].player.stats) }\n            </div>    \n        );\n    }\n}\n\nexport default Stats;\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport Stats from \"./Stats\";\n\nclass CardContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showStats: false\n        }\n    }\n    renderStats() {\n        const { card, positionPlayers } = this.props;\n\n        if (this.state.showStats) {\n            return <Stats onClick={() => this.setState({ showStats: !this.state.showStats })} card={card} positionPlayers={positionPlayers} />\n        }\n    }\n    render() {\n        const { card } = this.props;\n        return (\n            <div className=\"card-container\">\n               <Card card={card} onClick={() => this.setState({ showStats: !this.state.showStats })}/> \n               {this.renderStats()}\n            </div>\n        );\n    }\n}\n\nexport default CardContainer;\n","import React, { Component } from 'react';\nimport CardContainer from \"./components/CardContainer\";\nimport cardsJSON from \"./cards\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        cards: cardsJSON,\n        sort: \"alphaByLastName\"\n    };\n  }\n  sortCards() {\n    const { cards, sort } = this.state;\n    if (sort === \"alphaByLastName\") {\n      return cards.sort((a, b) => {\n        if(a.player.lastName < b.player.lastName) return -1;\n        if(a.player.lastName > b.player.lastName) return 1;\n        return 0;\n      })\n    } else if (sort === \"alphaByFirstName\") {\n      return cards.sort((a, b) => {\n        if(a.player.firstName < b.player.firstName) return -1;\n        if(a.player.firstName > b.player.firstName) return 1;\n        return 0;\n      })\n    } else if (sort === \"cardYearOldest\") {\n      return cards.sort((a, b) => a.info.year - b.info.year)\n    } else if (sort === \"cardYearNewest\") {\n      return cards.sort((a, b) => b.info.year - a.info.year)\n    } else if (sort === \"playerAgeOldest\") {\n      return cards.sort((a, b) => b.player.age - a.player.age)\n    } else if (sort === \"playerAgeYoungest\") {\n      return cards.sort((a, b) => a.player.age - b.player.age)\n    }\n  }\n  renderCards() {\n    const sortedCards = this.sortCards();\n    return sortedCards.map(card => {\n      let positionPlayers = sortedCards.filter(postionCard => {\n        return card.player.position === postionCard.player.position\n      });\n      return (\n        <CardContainer \n          key={`${card.info.number}${card.info.year}`} \n          card={card} \n          positionPlayers={positionPlayers}\n        />\n      )\n    })\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <header>\n            <h1>\n                Football<br /> \n                Collection\n            </h1>\n            <div className=\"selectdiv card-sort\">\n              <label>\n                <select onChange={e => this.setState({ sort: e.target.value })}>\n                  <option value=\"alphaByLastName\">Alphabetically (Last Name)</option>\n                  <option value=\"alphaByFirstName\">Alphabetically (First Name)</option>\n                  <option value=\"cardYearOldest\">Card Year (Oldest - Newest)</option>\n                  <option value=\"cardYearNewest\">Card Year (Newest - Oldest)</option>\n                  <option value=\"playerAgeOldest\">Player Age (Oldest - Youngest)</option>\n                  <option value=\"playerAgeYoungest\">Player Age (Youngest - Oldest)</option>\n                </select>\n              </label>\n            </div>\n          </header>\n          \n          <div className=\"flex-grid\">\n            {this.renderCards()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}